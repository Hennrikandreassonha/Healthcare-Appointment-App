@page "/"
@inject AuthenticationStateProvider authStateProvider
@inject IHttpContextAccessor _httpContextAccessor;
@inject HealthCare.Core.UserService.IUserService userService
@using HealthCare.Core.Data
@using HealthCare.Core.Models.AppointmentModels
@inject HealthcareContext _context
@inject EmailService emailService;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject FeedbackService feedbackService

<PageTitle>Index</PageTitle>
<div class="@(LeavingFeedback != null ? "blur-filter" : "")">
     <AuthorizeView>
          <Authorized>
               <div class="header-div">
                    <h1>Hello, @context.User.Identity.Name! Welcome to <span class="color-blue">Health Care AB</span>
                    </h1>
                    <p>
                         you have <u>@UpcomingAppointments.Count</u> upcoming appointments
                    </p>
                    @if (successMsg != "")
                    {
                         <p class="alert alert-success">@successMsg</p>
                    }
               </div>

               <div class="container-flex">
                    <div class="upcoming-div">
                         <header>
                              <h3>Upcoming appointments</h3>
                         </header>
                         @if (UpcomingAppointments != null)
                         {
                              <table>
                                  <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Service</th>
                                    @if (LoggedInUser is Patient)
                                    {
                                        <th>Doctor</th>

                                    }
                                    @if (LoggedInUser is CareGiver)
                                    {
                                        <th>Patient</th>
                                    }
                                </tr>
                            </thead>
                                   <tbody>
                                        @foreach (Appointment appointment in UpcomingAppointments)
                                        {
                                             <tr>
                                                  <td>@appointment.DateTime</td>
                                                  <td>@appointment.Service</td>
                                                  @if (LoggedInUser is Patient)
                                                  {
                                                       <td>@GetNameOfDoctor(appointment.CareGiverId)</td>

                                                  }
                                                                                                                                                 @if (LoggedInUser is CareGiver)

                                                  {
                                                       <td>@GetNameOfPatient(appointment.PatientId)</td>
                                                  }
                                                  <td>
                                                       <button class="btn btn-danger"
                                                            @onclick="(e) => RemoveAppointment(appointment)">Cancel</button>
                                                  </td>
                                             </tr>
                                        }
                                   </tbody>
                              </table>
                         }
                    </div>
                    <div class="passed-div">
                         <header>
                              <h3>Previous appointments</h3>
                         </header>
                         <div class="feedback-flex">
                              <table>
                                   <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Service</th>
                                    @if (LoggedInUser is Patient)
                                    {
                                        <th>Doctor</th>

                                    }
                                    @if (LoggedInUser is CareGiver)
                                    {
                                        <th>Patient</th>
                                    }
                                </tr>
                            </thead>
                                   <tbody>
                                        @foreach (Appointment appointment in PreviousAppointments)
                                        {
                                             <tr>
                                                  <td>@appointment.DateTime</td>
                                                  <td>@appointment.Service</td>

                                        @if (LoggedInUser is Patient)
                                        {
                                            <td>@GetNameOfDoctor(appointment.CareGiverId)</td>
                                        }
                                        @if (LoggedInUser is CareGiver)
                                        {
                                            <td>@GetNameOfPatient(appointment.PatientId)</td>
                                        }
                                                  <td>
                                                       @if(appointment.Feedback == null){
                                                       <button class="btn btn-primary feedback-btn"
                                                            @onclick="(e) => LeaveFeedback(appointment)">Leave
                                                            feedback</button>
                                                       }
                                                       @if(appointment.Feedback != "" && appointment.Feedback != null)
                                                       {
                                                             <button class="btn btn-success feedback-btn"
                                                            @onclick="(e) => ViewFeedback(appointment)">View
                                                            feedback</button>
                                                       }
                                                  </td>
                                             </tr>
                                        }
                                   </tbody>
                              </table>
                         </div>
                    </div>

               </div>
          </Authorized>
          <NotAuthorized>
               <h1>Hello, Guest!</h1>
               <p> You'll need to <a href="/login">log in</a> to see any information.</p>
          </NotAuthorized>
     </AuthorizeView>
</div>
@if (LeavingFeedback != null || ViewingFeedback != null)
{
     <div class="feedback-outer-div">
          <div id="feedback-container">
               <header>
               @if(LeavingFeedback != null){
                    <h3>Leave Feedback</h3>
}
               @if(ViewingFeedback != null){
                    <h3>Viewing Feedback</h3>
}    
                    <img @onclick="@CloseFeedback" src="\remove.png" id="close-btn" title="Close">
               </header>
               @if(LeavingFeedback != null){
               <p class="feedback-text"><u>Please submit your feedback
                    </u><br> (Only feedbacks with 3 or more stars will be saved)
                    <br> <i>Thank you for cooperating</i>
               </p>
               }

               <ul>
                    <li>
                          <strong>Doctor:</strong>
                         @(LeavingFeedback != null ? $"{LeavingFeedback.CareGiver.FirstName} {LeavingFeedback.CareGiver.LastName}" : $"{ViewingFeedback.CareGiver.FirstName} {ViewingFeedback.CareGiver.LastName}")

                    </li>
                    <li>
                         <strong>Date:</strong> @(LeavingFeedback != null ? LeavingFeedback.DateTime : ViewingFeedback.DateTime)

                    </li>
                    <li>
                         <strong>Service:</strong> @(LeavingFeedback != null ? LeavingFeedback.Service : ViewingFeedback.Service)
                    </li>
               </ul>
               @if(LeavingFeedback != null){
               <div class="feedbackform">
                    <EditForm Model="LeavingFeedback" OnValidSubmit="SubmitFeedback">
                         <textarea class="form-control" @bind="LeavingFeedback.Feedback"
                              placeholder="Greatest service ever" required>  </textarea>
                         <div class="rating">
                              <input type="radio" id="star5" name="rating">
                              <label for="star5" @onclick="(e) => SubmitRating(5)"></label>
                              <input type="radio" id="star4" name="rating">
                              <label for="star4" @onclick="(e) => SubmitRating(4)"></label>
                              <input type="radio" id="star3" name="rating">
                              <label for="star3" @onclick="(e) => SubmitRating(3)"></label>
                              <input type="radio" id="star2" name="rating">
                              <label for="star2" @onclick="(e) => SubmitRating(2)"></label>
                              <input type="radio" id="star1" name="rating">
                              <label for="star1" @onclick="(e) => SubmitRating(1)"></label>
                         </div>
                         <div class="submit-feedback-flex">
                              <button class="btn btn-primary submit-feedback" type="submit">Leave
                                   feedback</button>
                         </div>
                    </EditForm>
               </div>
               }
               @if(ViewingFeedback != null){

                    <p>@ViewingFeedback.Feedback</p>
                    @for(int i = 0; i <= ViewingFeedback.Rating; i++){
                         <label class="leaving-feedback-star">&#x2605;</label>
                    }
               }

               @if (FeedbackSuccess != "")
               {
                    <p class="alert alert-success" style="padding: 1rem; margin: 1rem;">@FeedbackSuccess <br>
                    <i>- The best healthcare company ever</i></p>
               }
               @if(FeedbackFail != ""){
                     <p class="alert alert-danger" style="padding: 1rem; margin: 1rem;">@FeedbackFail <br>
                    <i>- The best healthcare company ever</i></p>
               }
          </div>
     </div>
}
@code {
     private string userName = "";
     private User LoggedInUser;
     private List<Appointment> UpcomingAppointments = new();
     private List<Appointment> PreviousAppointments = new();
     public string NameOfDoctor = "";
     public string NameOfPatient = "";
     string successMsg = "";
     string FeedbackSuccess = "";
     string FeedbackFail = "";
     
     private Appointment? LeavingFeedback = null;
     private Appointment? ViewingFeedback = null;


     protected override async Task OnInitializedAsync()
     {
          userName = await userService.GetEmailAsync();
          LoggedInUser = userService.GetByEmail(userName);
          GetAllMeetings(LoggedInUser);
     }
     public void SubmitRating(int rating)
     {
          if (LeavingFeedback == null)
          {
               return;
          }
          LeavingFeedback.Rating = rating;
     }
     private void SubmitFeedback()
     {
          FeedbackSuccess = "";
          FeedbackFail = "";
          var success = feedbackService.SaveFeedback(LeavingFeedback);
          if(success){
                
               FeedbackSuccess = "Your feedback has been saved, thank you for cooperating";
          }
          else{
               FeedbackFail = "Rating was below 3 stars and therefore not saved, thank you anyway!";
          }
     }
    private void GetAllMeetings(User loggedInUser)
   {
       List<Appointment> appointments;
       UpcomingAppointments.Clear();
       PreviousAppointments.Clear();

       if (loggedInUser is Patient)
       {
           appointments = _context.Appointment.Where(x => x.PatientId == loggedInUser.Id)
           .OrderBy(x => x.DateTime)
           .ToList();

           foreach (var appointment in appointments)
           {
               if (appointment.DateTime > DateTime.Now)
               {

                   UpcomingAppointments.Add(appointment);
               }
               else
               {
                   PreviousAppointments.Add(appointment);
               }
           }
       }
       else if (loggedInUser is CareGiver)
       {
           appointments = _context.Appointment.Where(x => x.CareGiverId == loggedInUser.Id)
           .OrderBy(x => x.DateTime)
           .ToList();

           foreach (var appointment in appointments)
           {
               if (appointment.DateTime > DateTime.Now)
               {
                   if (appointment.PatientId != null)
                   {
                       UpcomingAppointments.Add(appointment);
                   }
               }
               else
               {
                   if (appointment.PatientId != null)
                   {
                       PreviousAppointments.Add(appointment);
                   }
               }
           }
       }
   }
     private void CloseFeedback()
     {
          LeavingFeedback = null;
          ViewingFeedback = null;
     }
     private string GetNameOfDoctor(int careGiverId)
     {
          var careGiver = _context.CareGiver.FirstOrDefault(x => x.Id == careGiverId);

          return NameOfDoctor = $"{careGiver.FirstName} {careGiver.LastName}";
     }

     private string GetNameOfPatient(int? patientId)
 {
     if (patientId != null)
     {
         var patient = _context.Patient.FirstOrDefault(x => x.Id == patientId);

         return NameOfPatient = $"{patient.FirstName} {patient.LastName}";
     }
     else
     {
         return "No patient";
     }
 }

     private void RemoveAppointment(Appointment appointment)
     {
          if (appointment != null)
          {
               SendCancelEmail(appointment, LoggedInUser);
               appointment.PatientId = null;
               appointment.Service = null;

               _context.Update(appointment);
               _context.SaveChanges();

               successMsg = "Your booking has been canceled!";
               GetAllMeetings(LoggedInUser);
          }
     }
     private void LeaveFeedback(Appointment appointment)
     {
          LeavingFeedback = appointment;
          FeedbackSuccess = "";
          FeedbackFail = "";
          ViewingFeedback = null;
     }
     private void ViewFeedback (Appointment appointment){
          ViewingFeedback = appointment;
          LeavingFeedback = null;
     }
     public bool SendCancelEmail(Appointment appointment, User user)
     {
          emailService = new EmailService(user.Email, appointment);
          emailService.SendEmail(false);
          return true;
     }
}