@page "/edit"
@inject AuthService authService
@inject HealthCare.Core.UserService.IUserService userService
@inject NavigationManager NavManager
@inject AuthenticationStateProvider authStateProvider

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <header>
            <h1>Account settings</h1>
        </header>
        <EditForm Model="userAccount" OnSubmit="SaveUserChanges">
            <div class="mb-3">
                <label>Email: </label>
                <InputText type="email" @bind-Value="userAccount.Email" class="form-control" style="max-width: 300px" />
            </div>
            <div class="mb-3">
                <label>First Name: </label>
                <InputText type="text" @bind-Value="userAccount.FirstName" class="form-control" style="max-width: 300px" />
            </div>
            <div class="mb-3">
                <label>Last Name: </label>
                <InputText type="text" @bind-Value="userAccount.LastName" class="form-control" style="max-width: 300px" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>

        </EditForm>
    </div>
</div>

@code {
    private string userEmail;
    private User userAccount = new User();

    protected override async Task OnInitializedAsync()
    {
        userEmail = await userService.GetEmailAsync();
        userAccount = userService.GetByEmail(userEmail);
    }

    private async Task SaveUserChanges()
    {
        await userService.UpdateUserAsync(userAccount);

        var customAuthStateProvider = authStateProvider as AuthStateProvider;
        if (customAuthStateProvider != null)
        {
            User user = new User
                {
                    Email = userAccount.Email,
                    FirstName = userAccount.FirstName,
                    Role = userAccount.Role
                };

            await customAuthStateProvider.UpdateAuthenticationState(user);
        }

        NavManager.NavigateTo("/accountsettings", true);
    }


}
