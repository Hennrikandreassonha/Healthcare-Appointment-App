@*the AppointmentService is added in program.cs *@
@inject FeedbackService feedbackService
@inject HealthCare.Core.Data.HealthcareContext dbContext
@*sets the component as a route, nav is changes to this route => see NavMenu*@
@page "/feedback"




<div>
    <h3>Feedback</h3>
    <p> Here is our feedback from previous clients. </p>
    <label for="sortSelected">Sort by</label>
    <select id="sortSelected" @onchange="SortAppointments">
        <option value="all">All</option>
        <option value="fiveStars">Only 5 stars</option>
        <option value="fourStars">Only 4 stars</option>
        <option value="lowToHigh">Low to high</option>
        <option value="highToLow">High to low</option>
    </select>
</div>

<div class="feedback-table">
    <table>
        <thead>
            <tr>
                <th>Patient</th>
                <th>Feedback</th>
                <th>Rating</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Appointment appointments in sortedAppointments)
            {
                <tr>
                    <td> @GetFirstNameOfPatient(appointments.PatientId)</td>
                    <td>@appointments.Feedback</td>
                    <td>
                        <p>
                            @for (int i = 0; i < 5; i++)
                            {
                                <span class="feedback-star @(i < appointments.Rating ? "feedback-gold-star" : "")">&#x2605;</span>

                            }
                        </p>
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>







@code {
    List<Appointment> feedbackAppointments = new List<Appointment>();
    List<Appointment> sortedAppointments = new List<Appointment>();


    protected override async Task OnInitializedAsync()
    {
        feedbackAppointments = feedbackService.GetAllFeedBack();
        sortedAppointments.AddRange(feedbackAppointments);
    }

    public string GetFirstNameOfPatient(int? id)
    {
        var patient = dbContext.Patient.FirstOrDefault(x => x.Id == id);

        return patient.FirstName;
    }

    public void SortAppointments(ChangeEventArgs options)
    {
        string selectedOptions = options.Value.ToString();

        if (selectedOptions == "fiveStars")
        {

            sortedAppointments = feedbackAppointments.Where(r => r.Rating == 5).ToList();
        }
        else if (selectedOptions == "fourStars")
        {

            sortedAppointments = feedbackAppointments.Where(r => r.Rating == 4).ToList();
        }
        else if (selectedOptions == "lowToHigh")
        {

            sortedAppointments = feedbackAppointments.OrderBy(r => r.Rating).ToList();
        }
        else if (selectedOptions == "highToLow")
        {

            sortedAppointments = feedbackAppointments.OrderByDescending(r => r.Rating).ToList();
        }
        else
        {
            sortedAppointments = feedbackService.GetAllFeedBack();
        }
    }
}
